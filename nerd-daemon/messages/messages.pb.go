// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: messages.proto

package messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message wrapper for wire protocol - all messages are wrapped in this
type Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Length        uint32                 `protobuf:"varint,1,opt,name=length,proto3" json:"length,omitempty"`                        // Message length (excluding this field)
	MessageId     uint32                 `protobuf:"varint,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"` // Message type identifier
	Payload       []byte                 `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`                       // Serialized message payload
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_messages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *Message) GetMessageId() uint32 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *Message) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

// HandshakeMsg is the initial message exchanged between peers.
// It includes the protocol string, reserved bytes, info hash, and peer ID.
type HandshakeMsg struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ProtocolString []byte                 `protobuf:"bytes,1,opt,name=protocol_string,json=protocolString,proto3" json:"protocol_string,omitempty"` // Should be "BitTorrent protocol" (19 bytes)
	Reserved       []byte                 `protobuf:"bytes,2,opt,name=reserved,proto3" json:"reserved,omitempty"`                                   // 8 reserved bytes (for extensions)
	InfoHash       []byte                 `protobuf:"bytes,3,opt,name=info_hash,json=infoHash,proto3" json:"info_hash,omitempty"`                   // 20-byte SHA1 hash of the torrent's info dictionary
	PeerId         []byte                 `protobuf:"bytes,4,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`                         // 20-byte peer ID
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *HandshakeMsg) Reset() {
	*x = HandshakeMsg{}
	mi := &file_messages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HandshakeMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandshakeMsg) ProtoMessage() {}

func (x *HandshakeMsg) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandshakeMsg.ProtoReflect.Descriptor instead.
func (*HandshakeMsg) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{1}
}

func (x *HandshakeMsg) GetProtocolString() []byte {
	if x != nil {
		return x.ProtocolString
	}
	return nil
}

func (x *HandshakeMsg) GetReserved() []byte {
	if x != nil {
		return x.Reserved
	}
	return nil
}

func (x *HandshakeMsg) GetInfoHash() []byte {
	if x != nil {
		return x.InfoHash
	}
	return nil
}

func (x *HandshakeMsg) GetPeerId() []byte {
	if x != nil {
		return x.PeerId
	}
	return nil
}

// KeepAliveMsg - sent to maintain connection (no payload)
type KeepAliveMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeepAliveMsg) Reset() {
	*x = KeepAliveMsg{}
	mi := &file_messages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeepAliveMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeepAliveMsg) ProtoMessage() {}

func (x *KeepAliveMsg) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeepAliveMsg.ProtoReflect.Descriptor instead.
func (*KeepAliveMsg) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{2}
}

// ChokeMsg indicates that the sender is choking the receiver
type ChokeMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChokeMsg) Reset() {
	*x = ChokeMsg{}
	mi := &file_messages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChokeMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChokeMsg) ProtoMessage() {}

func (x *ChokeMsg) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChokeMsg.ProtoReflect.Descriptor instead.
func (*ChokeMsg) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{3}
}

// UnchokeMsg indicates that the sender is unchoking the receiver
type UnchokeMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnchokeMsg) Reset() {
	*x = UnchokeMsg{}
	mi := &file_messages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnchokeMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnchokeMsg) ProtoMessage() {}

func (x *UnchokeMsg) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnchokeMsg.ProtoReflect.Descriptor instead.
func (*UnchokeMsg) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{4}
}

// InterestedMsg indicates that a peer is interested in downloading pieces.
type InterestedMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InterestedMsg) Reset() {
	*x = InterestedMsg{}
	mi := &file_messages_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InterestedMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterestedMsg) ProtoMessage() {}

func (x *InterestedMsg) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterestedMsg.ProtoReflect.Descriptor instead.
func (*InterestedMsg) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{5}
}

// NotInterestedMsg indicates that a peer is not interested in downloading
type NotInterestedMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotInterestedMsg) Reset() {
	*x = NotInterestedMsg{}
	mi := &file_messages_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotInterestedMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotInterestedMsg) ProtoMessage() {}

func (x *NotInterestedMsg) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotInterestedMsg.ProtoReflect.Descriptor instead.
func (*NotInterestedMsg) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{6}
}

// HaveMsg indicates that a peer has a complete piece.
type HaveMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PieceIndex    uint32                 `protobuf:"varint,1,opt,name=piece_index,json=pieceIndex,proto3" json:"piece_index,omitempty"` // The zero-based index of the piece the peer has
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HaveMsg) Reset() {
	*x = HaveMsg{}
	mi := &file_messages_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HaveMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HaveMsg) ProtoMessage() {}

func (x *HaveMsg) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HaveMsg.ProtoReflect.Descriptor instead.
func (*HaveMsg) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{7}
}

func (x *HaveMsg) GetPieceIndex() uint32 {
	if x != nil {
		return x.PieceIndex
	}
	return 0
}

// BitfieldMsg represents which pieces a peer has (bitfield)
type BitfieldMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bitfield      []byte                 `protobuf:"bytes,1,opt,name=bitfield,proto3" json:"bitfield,omitempty"` // Bitfield representing owned pieces
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BitfieldMsg) Reset() {
	*x = BitfieldMsg{}
	mi := &file_messages_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BitfieldMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BitfieldMsg) ProtoMessage() {}

func (x *BitfieldMsg) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BitfieldMsg.ProtoReflect.Descriptor instead.
func (*BitfieldMsg) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{8}
}

func (x *BitfieldMsg) GetBitfield() []byte {
	if x != nil {
		return x.Bitfield
	}
	return nil
}

// RequestMsg requests a specific block from a piece
type RequestMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PieceIndex    uint32                 `protobuf:"varint,1,opt,name=piece_index,json=pieceIndex,proto3" json:"piece_index,omitempty"`    // Index of the piece
	BlockOffset   uint32                 `protobuf:"varint,2,opt,name=block_offset,json=blockOffset,proto3" json:"block_offset,omitempty"` // Byte offset within the piece
	BlockLength   uint32                 `protobuf:"varint,3,opt,name=block_length,json=blockLength,proto3" json:"block_length,omitempty"` // Number of bytes requested
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestMsg) Reset() {
	*x = RequestMsg{}
	mi := &file_messages_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestMsg) ProtoMessage() {}

func (x *RequestMsg) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestMsg.ProtoReflect.Descriptor instead.
func (*RequestMsg) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{9}
}

func (x *RequestMsg) GetPieceIndex() uint32 {
	if x != nil {
		return x.PieceIndex
	}
	return 0
}

func (x *RequestMsg) GetBlockOffset() uint32 {
	if x != nil {
		return x.BlockOffset
	}
	return 0
}

func (x *RequestMsg) GetBlockLength() uint32 {
	if x != nil {
		return x.BlockLength
	}
	return 0
}

// PieceMsg delivers a block of data from a piece
type PieceMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PieceIndex    uint32                 `protobuf:"varint,1,opt,name=piece_index,json=pieceIndex,proto3" json:"piece_index,omitempty"`    // Index of the piece
	BlockOffset   uint32                 `protobuf:"varint,2,opt,name=block_offset,json=blockOffset,proto3" json:"block_offset,omitempty"` // Byte offset within the piece
	BlockData     []byte                 `protobuf:"bytes,3,opt,name=block_data,json=blockData,proto3" json:"block_data,omitempty"`        // The actual data block
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PieceMsg) Reset() {
	*x = PieceMsg{}
	mi := &file_messages_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PieceMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PieceMsg) ProtoMessage() {}

func (x *PieceMsg) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PieceMsg.ProtoReflect.Descriptor instead.
func (*PieceMsg) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{10}
}

func (x *PieceMsg) GetPieceIndex() uint32 {
	if x != nil {
		return x.PieceIndex
	}
	return 0
}

func (x *PieceMsg) GetBlockOffset() uint32 {
	if x != nil {
		return x.BlockOffset
	}
	return 0
}

func (x *PieceMsg) GetBlockData() []byte {
	if x != nil {
		return x.BlockData
	}
	return nil
}

// CancelMsg cancels a previous request
type CancelMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PieceIndex    uint32                 `protobuf:"varint,1,opt,name=piece_index,json=pieceIndex,proto3" json:"piece_index,omitempty"`    // Index of the piece
	BlockOffset   uint32                 `protobuf:"varint,2,opt,name=block_offset,json=blockOffset,proto3" json:"block_offset,omitempty"` // Byte offset within the piece
	BlockLength   uint32                 `protobuf:"varint,3,opt,name=block_length,json=blockLength,proto3" json:"block_length,omitempty"` // Number of bytes to cancel
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelMsg) Reset() {
	*x = CancelMsg{}
	mi := &file_messages_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelMsg) ProtoMessage() {}

func (x *CancelMsg) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelMsg.ProtoReflect.Descriptor instead.
func (*CancelMsg) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{11}
}

func (x *CancelMsg) GetPieceIndex() uint32 {
	if x != nil {
		return x.PieceIndex
	}
	return 0
}

func (x *CancelMsg) GetBlockOffset() uint32 {
	if x != nil {
		return x.BlockOffset
	}
	return 0
}

func (x *CancelMsg) GetBlockLength() uint32 {
	if x != nil {
		return x.BlockLength
	}
	return 0
}

// PortMsg announces the port for DHT node communication
type PortMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Port          uint32                 `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"` // DHT listening port
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PortMsg) Reset() {
	*x = PortMsg{}
	mi := &file_messages_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PortMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortMsg) ProtoMessage() {}

func (x *PortMsg) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortMsg.ProtoReflect.Descriptor instead.
func (*PortMsg) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{12}
}

func (x *PortMsg) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

// PaymentRequestMsg requests payment for content delivery
type PaymentRequestMsg struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BsvAddress     []byte                 `protobuf:"bytes,1,opt,name=bsv_address,json=bsvAddress,proto3" json:"bsv_address,omitempty"`              // BSV address for payment
	AmountSatoshis uint64                 `protobuf:"varint,2,opt,name=amount_satoshis,json=amountSatoshis,proto3" json:"amount_satoshis,omitempty"` // Amount in satoshis
	ContentHash    []byte                 `protobuf:"bytes,3,opt,name=content_hash,json=contentHash,proto3" json:"content_hash,omitempty"`           // Hash of content being paid for
	PieceIndex     uint32                 `protobuf:"varint,4,opt,name=piece_index,json=pieceIndex,proto3" json:"piece_index,omitempty"`             // Specific piece being paid for
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PaymentRequestMsg) Reset() {
	*x = PaymentRequestMsg{}
	mi := &file_messages_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentRequestMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentRequestMsg) ProtoMessage() {}

func (x *PaymentRequestMsg) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentRequestMsg.ProtoReflect.Descriptor instead.
func (*PaymentRequestMsg) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{13}
}

func (x *PaymentRequestMsg) GetBsvAddress() []byte {
	if x != nil {
		return x.BsvAddress
	}
	return nil
}

func (x *PaymentRequestMsg) GetAmountSatoshis() uint64 {
	if x != nil {
		return x.AmountSatoshis
	}
	return 0
}

func (x *PaymentRequestMsg) GetContentHash() []byte {
	if x != nil {
		return x.ContentHash
	}
	return nil
}

func (x *PaymentRequestMsg) GetPieceIndex() uint32 {
	if x != nil {
		return x.PieceIndex
	}
	return 0
}

// PaymentProofMsg provides proof of BSV payment
type PaymentProofMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId []byte                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"` // BSV transaction ID
	PieceIndex    uint32                 `protobuf:"varint,2,opt,name=piece_index,json=pieceIndex,proto3" json:"piece_index,omitempty"`         // Piece this payment covers
	ContentHash   []byte                 `protobuf:"bytes,3,opt,name=content_hash,json=contentHash,proto3" json:"content_hash,omitempty"`       // Content hash
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaymentProofMsg) Reset() {
	*x = PaymentProofMsg{}
	mi := &file_messages_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentProofMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentProofMsg) ProtoMessage() {}

func (x *PaymentProofMsg) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentProofMsg.ProtoReflect.Descriptor instead.
func (*PaymentProofMsg) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{14}
}

func (x *PaymentProofMsg) GetTransactionId() []byte {
	if x != nil {
		return x.TransactionId
	}
	return nil
}

func (x *PaymentProofMsg) GetPieceIndex() uint32 {
	if x != nil {
		return x.PieceIndex
	}
	return 0
}

func (x *PaymentProofMsg) GetContentHash() []byte {
	if x != nil {
		return x.ContentHash
	}
	return nil
}

// TokenBalanceMsg shares $NERD token balance information
type TokenBalanceMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NerdBalance   uint64                 `protobuf:"varint,1,opt,name=nerd_balance,json=nerdBalance,proto3" json:"nerd_balance,omitempty"`    // $NERD token balance
	TokenAddress  []byte                 `protobuf:"bytes,2,opt,name=token_address,json=tokenAddress,proto3" json:"token_address,omitempty"`  // Token wallet address
	StakedAmount  uint64                 `protobuf:"varint,3,opt,name=staked_amount,json=stakedAmount,proto3" json:"staked_amount,omitempty"` // Currently staked $NERD
	QualityScore  uint32                 `protobuf:"varint,4,opt,name=quality_score,json=qualityScore,proto3" json:"quality_score,omitempty"` // Peer quality/reputation score
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenBalanceMsg) Reset() {
	*x = TokenBalanceMsg{}
	mi := &file_messages_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenBalanceMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenBalanceMsg) ProtoMessage() {}

func (x *TokenBalanceMsg) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenBalanceMsg.ProtoReflect.Descriptor instead.
func (*TokenBalanceMsg) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{15}
}

func (x *TokenBalanceMsg) GetNerdBalance() uint64 {
	if x != nil {
		return x.NerdBalance
	}
	return 0
}

func (x *TokenBalanceMsg) GetTokenAddress() []byte {
	if x != nil {
		return x.TokenAddress
	}
	return nil
}

func (x *TokenBalanceMsg) GetStakedAmount() uint64 {
	if x != nil {
		return x.StakedAmount
	}
	return 0
}

func (x *TokenBalanceMsg) GetQualityScore() uint32 {
	if x != nil {
		return x.QualityScore
	}
	return 0
}

// QualityMetricsMsg shares peer performance data
type QualityMetricsMsg struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	UptimeSeconds    uint64                 `protobuf:"varint,1,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`           // How long peer has been online
	BytesUploaded    uint64                 `protobuf:"varint,2,opt,name=bytes_uploaded,json=bytesUploaded,proto3" json:"bytes_uploaded,omitempty"`           // Total bytes uploaded
	BytesDownloaded  uint64                 `protobuf:"varint,3,opt,name=bytes_downloaded,json=bytesDownloaded,proto3" json:"bytes_downloaded,omitempty"`     // Total bytes downloaded
	UploadSpeedMbps  float32                `protobuf:"fixed32,4,opt,name=upload_speed_mbps,json=uploadSpeedMbps,proto3" json:"upload_speed_mbps,omitempty"`  // Average upload speed
	ReliabilityScore float32                `protobuf:"fixed32,5,opt,name=reliability_score,json=reliabilityScore,proto3" json:"reliability_score,omitempty"` // Reliability metric (0-1)
	ServedPieces     []uint32               `protobuf:"varint,6,rep,packed,name=served_pieces,json=servedPieces,proto3" json:"served_pieces,omitempty"`       // List of pieces this peer serves
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *QualityMetricsMsg) Reset() {
	*x = QualityMetricsMsg{}
	mi := &file_messages_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QualityMetricsMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QualityMetricsMsg) ProtoMessage() {}

func (x *QualityMetricsMsg) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QualityMetricsMsg.ProtoReflect.Descriptor instead.
func (*QualityMetricsMsg) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{16}
}

func (x *QualityMetricsMsg) GetUptimeSeconds() uint64 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

func (x *QualityMetricsMsg) GetBytesUploaded() uint64 {
	if x != nil {
		return x.BytesUploaded
	}
	return 0
}

func (x *QualityMetricsMsg) GetBytesDownloaded() uint64 {
	if x != nil {
		return x.BytesDownloaded
	}
	return 0
}

func (x *QualityMetricsMsg) GetUploadSpeedMbps() float32 {
	if x != nil {
		return x.UploadSpeedMbps
	}
	return 0
}

func (x *QualityMetricsMsg) GetReliabilityScore() float32 {
	if x != nil {
		return x.ReliabilityScore
	}
	return 0
}

func (x *QualityMetricsMsg) GetServedPieces() []uint32 {
	if x != nil {
		return x.ServedPieces
	}
	return nil
}

// GeographicHintMsg provides routing optimization data
type GeographicHintMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CountryCode   string                 `protobuf:"bytes,1,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"` // ISO country code
	City          string                 `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`                                  // City name
	Latitude      float32                `protobuf:"fixed32,3,opt,name=latitude,proto3" json:"latitude,omitempty"`                        // GPS latitude
	Longitude     float32                `protobuf:"fixed32,4,opt,name=longitude,proto3" json:"longitude,omitempty"`                      // GPS longitude
	AsNumber      uint32                 `protobuf:"varint,5,opt,name=as_number,json=asNumber,proto3" json:"as_number,omitempty"`         // Autonomous System number
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GeographicHintMsg) Reset() {
	*x = GeographicHintMsg{}
	mi := &file_messages_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeographicHintMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeographicHintMsg) ProtoMessage() {}

func (x *GeographicHintMsg) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeographicHintMsg.ProtoReflect.Descriptor instead.
func (*GeographicHintMsg) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{17}
}

func (x *GeographicHintMsg) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *GeographicHintMsg) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *GeographicHintMsg) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *GeographicHintMsg) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *GeographicHintMsg) GetAsNumber() uint32 {
	if x != nil {
		return x.AsNumber
	}
	return 0
}

var File_messages_proto protoreflect.FileDescriptor

const file_messages_proto_rawDesc = "" +
	"\n" +
	"\x0emessages.proto\x12\x04nerd\"Z\n" +
	"\aMessage\x12\x16\n" +
	"\x06length\x18\x01 \x01(\rR\x06length\x12\x1d\n" +
	"\n" +
	"message_id\x18\x02 \x01(\rR\tmessageId\x12\x18\n" +
	"\apayload\x18\x03 \x01(\fR\apayload\"\x89\x01\n" +
	"\fHandshakeMsg\x12'\n" +
	"\x0fprotocol_string\x18\x01 \x01(\fR\x0eprotocolString\x12\x1a\n" +
	"\breserved\x18\x02 \x01(\fR\breserved\x12\x1b\n" +
	"\tinfo_hash\x18\x03 \x01(\fR\binfoHash\x12\x17\n" +
	"\apeer_id\x18\x04 \x01(\fR\x06peerId\"\x0e\n" +
	"\fKeepAliveMsg\"\n" +
	"\n" +
	"\bChokeMsg\"\f\n" +
	"\n" +
	"UnchokeMsg\"\x0f\n" +
	"\rInterestedMsg\"\x12\n" +
	"\x10NotInterestedMsg\"*\n" +
	"\aHaveMsg\x12\x1f\n" +
	"\vpiece_index\x18\x01 \x01(\rR\n" +
	"pieceIndex\")\n" +
	"\vBitfieldMsg\x12\x1a\n" +
	"\bbitfield\x18\x01 \x01(\fR\bbitfield\"s\n" +
	"\n" +
	"RequestMsg\x12\x1f\n" +
	"\vpiece_index\x18\x01 \x01(\rR\n" +
	"pieceIndex\x12!\n" +
	"\fblock_offset\x18\x02 \x01(\rR\vblockOffset\x12!\n" +
	"\fblock_length\x18\x03 \x01(\rR\vblockLength\"m\n" +
	"\bPieceMsg\x12\x1f\n" +
	"\vpiece_index\x18\x01 \x01(\rR\n" +
	"pieceIndex\x12!\n" +
	"\fblock_offset\x18\x02 \x01(\rR\vblockOffset\x12\x1d\n" +
	"\n" +
	"block_data\x18\x03 \x01(\fR\tblockData\"r\n" +
	"\tCancelMsg\x12\x1f\n" +
	"\vpiece_index\x18\x01 \x01(\rR\n" +
	"pieceIndex\x12!\n" +
	"\fblock_offset\x18\x02 \x01(\rR\vblockOffset\x12!\n" +
	"\fblock_length\x18\x03 \x01(\rR\vblockLength\"\x1d\n" +
	"\aPortMsg\x12\x12\n" +
	"\x04port\x18\x01 \x01(\rR\x04port\"\xa1\x01\n" +
	"\x11PaymentRequestMsg\x12\x1f\n" +
	"\vbsv_address\x18\x01 \x01(\fR\n" +
	"bsvAddress\x12'\n" +
	"\x0famount_satoshis\x18\x02 \x01(\x04R\x0eamountSatoshis\x12!\n" +
	"\fcontent_hash\x18\x03 \x01(\fR\vcontentHash\x12\x1f\n" +
	"\vpiece_index\x18\x04 \x01(\rR\n" +
	"pieceIndex\"|\n" +
	"\x0fPaymentProofMsg\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\fR\rtransactionId\x12\x1f\n" +
	"\vpiece_index\x18\x02 \x01(\rR\n" +
	"pieceIndex\x12!\n" +
	"\fcontent_hash\x18\x03 \x01(\fR\vcontentHash\"\xa3\x01\n" +
	"\x0fTokenBalanceMsg\x12!\n" +
	"\fnerd_balance\x18\x01 \x01(\x04R\vnerdBalance\x12#\n" +
	"\rtoken_address\x18\x02 \x01(\fR\ftokenAddress\x12#\n" +
	"\rstaked_amount\x18\x03 \x01(\x04R\fstakedAmount\x12#\n" +
	"\rquality_score\x18\x04 \x01(\rR\fqualityScore\"\x8a\x02\n" +
	"\x11QualityMetricsMsg\x12%\n" +
	"\x0euptime_seconds\x18\x01 \x01(\x04R\ruptimeSeconds\x12%\n" +
	"\x0ebytes_uploaded\x18\x02 \x01(\x04R\rbytesUploaded\x12)\n" +
	"\x10bytes_downloaded\x18\x03 \x01(\x04R\x0fbytesDownloaded\x12*\n" +
	"\x11upload_speed_mbps\x18\x04 \x01(\x02R\x0fuploadSpeedMbps\x12+\n" +
	"\x11reliability_score\x18\x05 \x01(\x02R\x10reliabilityScore\x12#\n" +
	"\rserved_pieces\x18\x06 \x03(\rR\fservedPieces\"\xa1\x01\n" +
	"\x11GeographicHintMsg\x12!\n" +
	"\fcountry_code\x18\x01 \x01(\tR\vcountryCode\x12\x12\n" +
	"\x04city\x18\x02 \x01(\tR\x04city\x12\x1a\n" +
	"\blatitude\x18\x03 \x01(\x02R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x04 \x01(\x02R\tlongitude\x12\x1b\n" +
	"\tas_number\x18\x05 \x01(\rR\basNumberB!Z\x1fgithub.com/nerd-daemon/messagesb\x06proto3"

var (
	file_messages_proto_rawDescOnce sync.Once
	file_messages_proto_rawDescData []byte
)

func file_messages_proto_rawDescGZIP() []byte {
	file_messages_proto_rawDescOnce.Do(func() {
		file_messages_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_messages_proto_rawDesc), len(file_messages_proto_rawDesc)))
	})
	return file_messages_proto_rawDescData
}

var file_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_messages_proto_goTypes = []any{
	(*Message)(nil),           // 0: nerd.Message
	(*HandshakeMsg)(nil),      // 1: nerd.HandshakeMsg
	(*KeepAliveMsg)(nil),      // 2: nerd.KeepAliveMsg
	(*ChokeMsg)(nil),          // 3: nerd.ChokeMsg
	(*UnchokeMsg)(nil),        // 4: nerd.UnchokeMsg
	(*InterestedMsg)(nil),     // 5: nerd.InterestedMsg
	(*NotInterestedMsg)(nil),  // 6: nerd.NotInterestedMsg
	(*HaveMsg)(nil),           // 7: nerd.HaveMsg
	(*BitfieldMsg)(nil),       // 8: nerd.BitfieldMsg
	(*RequestMsg)(nil),        // 9: nerd.RequestMsg
	(*PieceMsg)(nil),          // 10: nerd.PieceMsg
	(*CancelMsg)(nil),         // 11: nerd.CancelMsg
	(*PortMsg)(nil),           // 12: nerd.PortMsg
	(*PaymentRequestMsg)(nil), // 13: nerd.PaymentRequestMsg
	(*PaymentProofMsg)(nil),   // 14: nerd.PaymentProofMsg
	(*TokenBalanceMsg)(nil),   // 15: nerd.TokenBalanceMsg
	(*QualityMetricsMsg)(nil), // 16: nerd.QualityMetricsMsg
	(*GeographicHintMsg)(nil), // 17: nerd.GeographicHintMsg
}
var file_messages_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_messages_proto_init() }
func file_messages_proto_init() {
	if File_messages_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_messages_proto_rawDesc), len(file_messages_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_proto_goTypes,
		DependencyIndexes: file_messages_proto_depIdxs,
		MessageInfos:      file_messages_proto_msgTypes,
	}.Build()
	File_messages_proto = out.File
	file_messages_proto_goTypes = nil
	file_messages_proto_depIdxs = nil
}
